// Code generated by goctl. DO NOT EDIT!
// Source: ums.proto

package ums

import (
	"context"

	"github.com/shrinex/shrinex-admin-backend/ums-rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	SignUpInput  = pb.SignUpInput
	SignUpOutput = pb.SignUpOutput

	Ums interface {
		SignUp(ctx context.Context, in *SignUpInput, opts ...grpc.CallOption) (*SignUpOutput, error)
	}

	defaultUms struct {
		cli zrpc.Client
	}
)

func NewUms(cli zrpc.Client) Ums {
	return &defaultUms{
		cli: cli,
	}
}

func (m *defaultUms) SignUp(ctx context.Context, in *SignUpInput, opts ...grpc.CallOption) (*SignUpOutput, error) {
	client := pb.NewUmsClient(m.cli.Conn())
	return client.SignUp(ctx, in, opts...)
}
